version: '3.8'

x-function: &python
  volumes:
    - ./app:/app:rw
    - poetry-volume:/opt/poetry:delegated
  environment: &env-vars
    POETRY_HOME: /opt/poetry
  networks:
    - internal
  env_file:
    .env

services:

  app_db:
    container_name: ${PROJECT_SLUG}_db
    image: postgres:11
    volumes:
      - app_db-template:/var/lib/postgresql/data/pgdata:rw
    env_file:
      - .env
    networks:
      - internal
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
      PGDATA: /var/lib/postgresql/data/pgdata

  app:
    <<: *python
    container_name: ${PROJECT_SLUG}_app
    build:
      context: .
      dockerfile: backend.dockerfile
    env_file:
      - .env
    restart: always


volumes:
  app_db-template:
  poetry-volume:

networks:
  internal: